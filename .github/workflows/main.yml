# .github/workflows/main.yml
name: Cypress E2E Tests

on:
  push:
    branches:
      - main # Garanta que esta é a sua branch principal (ex: master)
    branches-ignore:
      - "renovate/**" # Mantém esta regra se for útil para você

  pull_request:
    branches:
      - main # Garanta que esta é a sua branch principal

jobs:
  # O job principal para executar os testes Cypress E2E
  cypress-run:
    runs-on: ubuntu-latest # A máquina virtual onde o workflow rodará
    
    # Usa uma imagem Docker do Cypress que já vem com navegadores e Node.js
    container: cypress/browsers:node20.11.0-chrome122-ff123 # Versão recomendada: Node 20, Chrome 122, Firefox 123
    options: --user 1001 # Garante permissões corretas dentro do container

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 # Baixa o código do seu repositório

      - name: Install All Dependencies
        # Este comando instalará todas as dependências do seu package.json, incluindo o Cypress.
        # Use 'npm install' se você usa npm, ou 'yarn install' se usa yarn.
        run: npm install # Altere para 'yarn install' se usar Yarn

      - name: Run Cypress Tests
        # Inicia a aplicação (backend + frontend) em segundo plano e espera ela estar pronta.
        # Ajuste 'npm start' se o seu comando para iniciar o app for diferente (ex: 'npm run dev').
        # Ajuste 'http://localhost:3000' para a URL e porta que sua aplicação usa.
        run: |
          npm start & # Inicia o seu aplicativo em segundo plano
          npx wait-on http://localhost:3000 # Espera o aplicativo subir e ficar acessível
          npx cypress run --browser chrome # Roda seus testes Cypress no Chrome em modo headless
        
        env:
          # Define a URL base para o Cypress, que será usada como 'baseUrl' nos seus testes.
          CYPRESS_BASE_URL: http://localhost:3000 
          
          # Se você estiver usando o Cypress Cloud para gravação de testes e paralelização,
          # adicione suas variáveis de ambiente aqui como secrets.
          # Exemplo:
          # CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necessário para relatar o status das checks ao GitHub